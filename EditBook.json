import React, { Component } from "react"; 
import "bootstrap/dist/css/bootstrap.min.css"; 
import MyTextInput from "./MyTextInput"; 
import axios from "axios"; 
import classnames from "classnames"; 
class EditBook extends Component { 
 state = { 
 bookId: 0, 
 bookName: "", 
 author: "", 
 price: 0, 
 category: "", 
 publications: "", 
 errors: {}, 
 };
 componentDidMount() { 
 console.log("componentDidMount", this.props); 
 this.setState({ 
 bookId: this.props.match.params.mybookId, 
 }); 
 Const URL = 
http://localhost:5500/myapi/mybooks/${this.props.match.params.mybookId}; 
 axios.get(URL).then((myresponse) => { 
 console.log(myresponse.data); 
 this.setState({ 
 bookId: myresponse.data.bookId, 
 bookName: myresponse.data.bookName, 
 author: myresponse.data.author, 
 price: myresponse.data.price, 
 category: myresponse.data.category,
 publications: myresponse.data.publications, 
 }); 
 }); 
 } 
 onChangeHandler = (event) => { 
 console.log("onChangeHandler"); 
 this.setState({ 
 [event.target.name]: event.target.value, 
 }); 
 }; 
 onSubmitHandler = (event) => { 
 event.preventDefault(); 
 const { bookName, author, price, category, publications } = this.state; 
 console.log("onSubmitHandler"); 
 console.log(this.state); 
 //Do the Validations 
 if (bookName === "") { 
 this.setState({ 
 errors: { 
 bookName: "Book Name is Required", 
 }, 
 }); 
 return; 
 } 
 if (author === "") { 
 this.setState({ 
 errors: { 
 author: "Author is Required", 
 }, 
 }); 
 return; 
 } 
 if (price === "") { 
 this.setState({ 
 errors: { 
 price: "Price is Required", 
 }, 
 }); 
 return; 
 }
  if (category === "") { 
 this.setState({ 
 errors: { 
 category: "Category is Required", 
 }, 
 }); 
 return; 
 } 
 if (publications === "") { 
 this.setState({ 
 errors: { 
 pub: "Publications is Required", 
 }, 
 }); 
 return; 
 } 
 //Make Call to Server 
 const URL = "http://localhost:5500/myapi/mybooks"; 
 axios 
 .put(URL, this.state) 
 .then((myresponse) => { 
 console.log(1, myresponse.data); 
 //Form Reset 
 this.setState({ 
 bookId: 0, 
 bookName: "", 
 author: "", 
 price: 0, 
 category: "", 
 publications: "", 
 errors: {}, 
 }); 
 this.props.history.push("/"); 
 }) 
 .catch((myerror) => { 
 console.log(2, myerror); 
 }); 
 };
  render() { 
 const { bookId, bookName, author, price, category, publications,} = this.state; 
 return ( 
 <div className="card-body container col-md-6"> 
 <h2 className="text-center"> Edit Book Form </h2> 
 <form onSubmit={this.onSubmitHandler}> 
 <div className="form-group"> 
 <label htmlFor="bookId"> Book Id </label> 
 <input type="text" name="bookId" value={bookId} readOnly 
 className={classnames("form-control form-control-lg")} /> 
 </div> 
 <MyTextInput 
 myname="bookName" 
 mylabel="Book Name" 
 myvalue={bookName} 
 myerror={this.state.errors.bookName} 
 myOnChange={this.onChangeHandler} /> 
 <MyTextInput 
 myname="author" 
 mylabel="Author" 
 myvalue={author} 
 myerror={this.state.errors.author} 
 myOnChange={this.onChangeHandleâ€¦
 <MyTextInput 
 myname="category" 
 mylabel="Category" 
 myvalue={category} 
 myerror={this.state.errors.category} 
 myOnChange={this.onChangeHandler} /> 
 <MyTextInput 
 myname="publications" 
 mylabel="Publications" 
 myvalue={publications} 
 myerror={this.state.errors.publications} 
 myOnChange={this.onChangeHandler} /> 
<input type="submit" value="Update Book Now" className="btn btn-primary btn-lg"/> 
 </form> 
 </div> 
 ); 
 } 
} 
export default EditBook;
